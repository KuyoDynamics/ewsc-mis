type Query {
  countries: [Country!]
  country(id: ID!): Country
  provinces(country_id: ID!): [Province!]
  province(id: ID!): Province
  districts(province_id: ID!): [District!]
  district(id: ID!): District
}

type Mutation {
  #================COUNTRY======================
  createCountry(input: CreateCountryInput!): CreateCountryPayload
  deleteCountry(input: DeleteCountryInput!): DeleteCountryPayload
  updateCountry(input: UpdateCountryInput!): UpdateCountryPayload

  # createCountries: [Country!]
  # deleteCountries: [Countries!]
  # updateCountries: [Countries!]

  #==================PROVINCE========================

  #==================DISTRICT========================

  #==================ORGANISATION====================

  #==================CATCHMENT PROVINCE==============

  #==================CATCHMENT DISTRICT==============

  #==================USER============================

  #==================DISTRICT USER===================

  #==================ORGANISATION USER===============

  #==================USER ROLE=======================

  #==================USER ROLE SCOPE=================

  #==================USER ROLE SCOPE PERMISSIONS======

  #==================SERVICE AREAS=============

  #==================WATER TREATMENT PLANT==============

  #==================SEWER TREATMENT PLANT==============

  #==================WATER NETWORK==================

  #===================SEWER NETWORK================

  #===================INDICATORS===================

  #===================REPORTS=============
}

input CreateCountryInput {
  code: String!
  name: String!
  flag: Byte
  provinces: [CreateProvinceInput!]
  organisations: [CreateOrganisationInput!]
  created_at: DateTime
  created_by: String
  last_modified_at: DateTime
  last_modified_by: String
}

type CreateCountryPayload {
  country: Country!
}

type DeleteCountryPayload {
  country: Country!
}

input DeleteCountryInput {
  id: ID!
}

input UpdateCountryInput {
  id: ID!
  update: CountryUpdateInput!
}

input CountryUpdateInput {
  name: String
  code: String
}

type UpdateCountryPayload {
  country: Country!
}

input CreateOrganisationInput {
  name: String!
  logo: Byte
  country_id: String!
  catchment_provinces: [CreateCatchmentProvinceInput!]
  # users: [User]
  created_at: DateTime
  created_by: String
  last_modified_at: DateTime
  last_modified_by: String
}

input CreateProvinceInput {
  code: String!
  name: String!
  country_id: String!
  districts: [CreateDistrictInput!]
  created_at: DateTime
  created_by: String
  last_modified_at: DateTime
  last_modified_by: String
}

input CreateDistrictInput {
  name: String!
  code: String!
  province_id: String!
  # organisations_in_district: [Organisation!]
  created_at: DateTime
  created_by: String
  last_modified_at: DateTime
  last_modified_by: String
}

input CreateCatchmentProvinceInput {
  province_id: String!
  organisation_id: String!
  catchment_districts: [CreateCatchmentDistrictInput!]
  created_at: DateTime
  created_by: String
  last_modified_at: DateTime
  last_modified_by: String
}

input CreateCatchmentDistrictInput {
  district_id: String!
  catchment_province_id: String!
  # water_treatment_plants WaterTreatmentPlant[]
  # service_areas          ServiceArea[]
  # sewer_treatment_plants SewerTreatmentPlant[]
  # reports                Report[]
  # users                  DistrictUser[]

  created_at: DateTime
  created_by: String
  last_modified_at: DateTime
  last_modified_by: String
}

#===============SYSTEM TABLES==============
type Country {
  id: ID!
  code: String!
  name: String!
  flag: Byte
  provinces: [Province!]
  organisations: [Organisation!]
  created_at: DateTime!
  created_by: String!
  last_modified_at: DateTime!
  last_modified_by: String!
}

type Province {
  id: ID!
  code: String!
  name: String!
  country_id: String!
  country: Country
  districts: [District!]
  created_at: DateTime!
  created_by: String!
  last_modified_at: DateTime!
  last_modified_by: String!
}

type District {
  id: ID!
  name: String!
  code: String!
  province_id: String!
  province: Province
  # organisations_in_district: [Organisation!]
  created_at: DateTime!
  created_by: String!
  last_modified_at: DateTime!
  last_modified_by: String!
}

#===============ORGANISATION MODELS===============
type Organisation {
  id: ID!
  name: String!
  logo: Byte
  country_id: String!
  country: Country
  catchment_provinces: [CatchmentProvince!]
  # users: [User]
  created_at: DateTime!
  created_by: String!
  last_modified_at: DateTime!
  last_modified_by: String!
}

type CatchmentProvince {
  id: ID!
  province_id: String!
  province_name: String!
  province: Province
  organisation_id: String!
  organisation_name: String!
  organisation: Organisation
  catchment_districts: [CatchmentDistrict!]

  created_at: DateTime
  created_by: String
  last_modified_at: DateTime
  last_modified_by: String
}

type CatchmentDistrict {
  id: ID!
  district_id: String!
  district_name: String!
  district: District
  catchment_province_id: String!
  catchment_province_name: String!
  catchment_province: CatchmentProvince
  # water_treatment_plants WaterTreatmentPlant[]
  # service_areas          ServiceArea[]
  # sewer_treatment_plants SewerTreatmentPlant[]
  # reports                Report[]
  # users                  DistrictUser[]

  created_at: DateTime!
  created_by: String!
  last_modified_at: DateTime!
  last_modified_by: String!
}

scalar DateTime
scalar Byte
scalar JSON
